<Window x:Class="MapDownloader.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MapDownloader.Views"
        mc:Ignorable="d"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
         TextElement.FontWeight="Regular"
         TextElement.FontSize="13"
         TextOptions.TextFormattingMode="Ideal"
         TextOptions.TextRenderingMode="Auto"
         Background="{DynamicResource MaterialDesignPaper}"
         FontFamily="{DynamicResource MaterialDesignFont}"
        
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <!--<Storyboard x:Key="sbShowBar" AutoReverse="False">
            <DoubleAnimation
                                Storyboard.TargetName="rightContentControl"
                                Storyboard.TargetProperty="Width"
                                From="250" To="0" BeginTime="0:0:0" Duration="0:0:0.5" />
            <DoubleAnimation
                                Storyboard.TargetName="rightContentControl"
                                Storyboard.TargetProperty="Width"
                                From="0" To="250" BeginTime="0:0:0.5" Duration="0:0:0.5" />
        </Storyboard>-->
        <Storyboard x:Key="sbShowBarInit" AutoReverse="False">
            <DoubleAnimation
                                Storyboard.TargetName="rightContentControl"
                                Storyboard.TargetProperty="Width"
                                From="0" To="250" BeginTime="0:0:0" Duration="0:0:0.5" />
        </Storyboard>
    </Window.Resources>
    <Grid>
        
        <materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <DockPanel>
                <materialDesign:ColorZone Mode="SecondaryMid" Padding="10" DockPanel.Dock="Top">
                    <StackPanel Orientation="Horizontal">
                        <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                Click="MenuToggleButton_OnClick"
                                AutomationProperties.Name="HamburgerToggleButton"/>
                        <TextBlock Margin="16 0 0 0" Text="UAV Map Caching" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </StackPanel>
                </materialDesign:ColorZone>
                <local:MapView x:Name="mapView" Padding="0" DockPanel.Dock="Bottom"/>
            </DockPanel>

            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220" x:Name="DemoItemsSearchBox">
                    <Grid DockPanel.Dock="Top">
                        <TextBlock Text="Tile Server"  Margin="0,0,60,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontSize="20" FontWeight="ExtraBold"/>
                        <ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        Margin="10"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" HorizontalAlignment="Right"/>
                      
                    </Grid>
                    
                    <ListBox 
                        x:Name="DemoItemsListBox" 
                        Margin="0,0,0,16"
                        SelectedIndex="{Binding SelectedTileLayerIndex}"
                        SelectedItem="{Binding SelectedTileLayer, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding TileLayers}"
                        PreviewMouseLeftButtonUp="UIElement_OnPreviewMouseLeftButtonUp"
                        AutomationProperties.Name="DemoPagesListBox"
                        >
                        <ListBox.Resources>
                            <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="domain:DemoItem">
                                <TextBlock Text="{Binding SourceName}" Margin="24 4 0 4" AutomationProperties.AutomationId="DemoItemPage"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <EventSetter Event="MouseLeftButtonUp" Handler="ListViewItem_PreviewMouseLeftButtonDown" />
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>

                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            
        </materialDesign:DrawerHost>

        <materialDesign:PopupBox Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
            PlacementMode="TopAndAlignCentres" ToolTipService.Placement="Top" ToolTip="PopupBox, Style MaterialDesignMultiFloatingActionPopupBox"
            Opened="PopupBox_OnOpened" Closed="PopupBox_OnClosed" IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,9,9">
            <StackPanel>
                <Button ToolTip="New Region" Command="{Binding AddNewRegionCommand}" CommandParameter="AddNew" Content="{materialDesign:PackIcon Kind=OpenInNew, Size=25}" />
                <Button ToolTip="Delete Region" Command="{Binding DeleteRegionCommand}" CommandParameter="Delete" Content="{materialDesign:PackIcon Kind=DeleteOutline, Size=25}"  />
                <Button ToolTip="Save Region" Command="{Binding SaveRegionCommand}" CommandParameter="Save" Content="{materialDesign:PackIcon Kind=ContentSaveEditOutline, Size=25}"  />
                <Button ToolTip="Download Map" Command="{Binding DownloadRegionCommand}" CommandParameter="Download" Content="{materialDesign:PackIcon Kind=DownloadOutline, Size=25}"  />
            </StackPanel>
        </materialDesign:PopupBox>

        <!--<ContentControl x:Name="rightContentControl" Content="{Binding RightPanelItem}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,60,5,5">
            <ContentControl.Triggers>
                <DataTrigger Binding="{Binding RightPanelItem}" Value="{x:Null}">
                    
                </DataTrigger>-->
                <!--<EventTrigger RoutedEvent="KeyDown">
                    <BeginStoryboard>
                        <Storyboard AutoReverse="False">
                            <DoubleAnimation
                                Storyboard.TargetName="rightContentControl"
                                Storyboard.TargetProperty="Width"
                                From="0" To="250" Duration="0:0:0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>-->
            <!--</ContentControl.Triggers>
        </ContentControl>-->
        <ContentControl x:Name="rightContentControl" Content="{Binding RightPanelItem, NotifyOnTargetUpdated=True}"
                        HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,60,5,5" > 
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TargetUpdated">
                    <!--<i:Interaction.Behaviors>
                        <ei:ConditionBehavior>
                            <ei:ConditionalExpression>
                                <ei:ComparisonCondition LeftOperand="{Binding LastRightPanelItem}" Operator="NotEqual" RightOperand="{x:Null}" />
                            </ei:ConditionalExpression>
                        </ei:ConditionBehavior>
                    </i:Interaction.Behaviors>-->
                    <ei:ControlStoryboardAction Storyboard="{StaticResource sbShowBarInit}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ContentControl>
        <!--<local:PolygonInfoPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5,60,5,5" Visibility="{Binding IsShowNewPolygonPanel}"/>
        <local:DownloadPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="70"/>-->
    </Grid>
</Window>
